var documenterSearchIndex = {"docs":
[{"location":"91-developer/#dev_docs","page":"Developer documentation","title":"Developer documentation","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"note: Contributing guidelines\nIf you haven't, please read the Contributing guidelines first.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"If you want to make contributions to this package that involves code, then this guide is for you.","category":"page"},{"location":"91-developer/#First-time-clone","page":"Developer documentation","title":"First time clone","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"tip: If you have writing rights\nIf you have writing rights, you don't have to fork. Instead, simply clone and skip ahead. Whenever upstream is mentioned, use origin instead.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"If this is the first time you work with this repository, follow the instructions below to clone the repository.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Fork this repo\nClone your repo (this will create a git remote called origin)\nAdd this repo as a remote:\ngit remote add upstream https://github.com/TulipaEnergy/TulipaClustering.jl","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"This will ensure that you have two remotes in your git: origin and upstream. You will create branches and push to origin, and you will fetch and update your local main branch from upstream.","category":"page"},{"location":"91-developer/#Linting-and-formatting","page":"Developer documentation","title":"Linting and formatting","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Install a plugin on your editor to use EditorConfig. This will ensure that your editor is configured with important formatting settings.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"We use https://pre-commit.com to run the linters and formatters. In particular, the Julia code is formatted using JuliaFormatter.jl, so please install it globally first:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"julia> # Press ]\npkg> activate\npkg> add JuliaFormatter","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"To install pre-commit, we recommend using pipx as follows:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"# Install pipx following the link\npipx install pre-commit","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"With pre-commit installed, activate it as a pre-commit hook:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"pre-commit install","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"To run the linting and formatting manually, enter the command below:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"pre-commit run -a","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Now, you can only commit if all the pre-commit tests pass.","category":"page"},{"location":"91-developer/#Testing","page":"Developer documentation","title":"Testing","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"As with most Julia packages, you can just open Julia in the repository folder, activate the environment, and run test:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"julia> # press ]\npkg> activate .\npkg> test","category":"page"},{"location":"91-developer/#Working-on-a-new-issue","page":"Developer documentation","title":"Working on a new issue","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"We try to keep a linear history in this repo, so it is important to keep your branches up-to-date.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Fetch from the remote and fast-forward your local main\ngit fetch upstream\ngit switch main\ngit merge --ff-only upstream/main\nBranch from main to address the issue (see below for naming)\ngit switch -c 42-add-answer-universe\nPush the new local branch to your personal remote repository\ngit push -u origin 42-add-answer-universe\nCreate a pull request to merge your remote branch into the org main.","category":"page"},{"location":"91-developer/#Branch-naming","page":"Developer documentation","title":"Branch naming","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"If there is an associated issue, add the issue number.\nIf there is no associated issue, and the changes are small, add a prefix such as \"typo\", \"hotfix\", \"small-refactor\", according to the type of update.\nIf the changes are not small and there is no associated issue, then create the issue first, so we can properly discuss the changes.\nUse dash separated imperative wording related to the issue (e.g., 14-add-tests, 15-fix-model, 16-remove-obsolete-files).","category":"page"},{"location":"91-developer/#Commit-message","page":"Developer documentation","title":"Commit message","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Use imperative or present tense, for instance: Add feature or Fix bug.\nHave informative titles.\nWhen necessary, add a body with details.\nIf there are breaking changes, add the information to the commit message.","category":"page"},{"location":"91-developer/#Before-creating-a-pull-request","page":"Developer documentation","title":"Before creating a pull request","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"tip: Atomic git commits\nTry to create \"atomic git commits\" (recommended reading: The Utopic Git History).","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Make sure the tests pass.\nMake sure the pre-commit tests pass.\nFetch any main updates from upstream and rebase your branch, if necessary:\ngit fetch upstream\ngit rebase upstream/main BRANCH_NAME\nThen you can open a pull request and work with the reviewer to address any issues.","category":"page"},{"location":"91-developer/#Building-and-viewing-the-documentation-locally","page":"Developer documentation","title":"Building and viewing the documentation locally","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Following the latest suggestions, we recommend using LiveServer to build the documentation. Here is how you do it:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Run julia --project=docs to open Julia in the environment of the docs.\nIf this is the first time building the docs\nPress ] to enter pkg mode\nRun pkg> dev . to use the development version of your package\nPress backspace to leave pkg mode\nRun julia> using LiveServer\nRun julia> servedocs()","category":"page"},{"location":"91-developer/#Making-a-new-release","page":"Developer documentation","title":"Making a new release","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"To create a new release, you can follow these simple steps:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Create a branch release-x.y.z\nUpdate version in Project.toml\nUpdate the CHANGELOG.md:\nRename the section \"Unreleased\" to \"[x.y.z] - yyyy-mm-dd\" (i.e., version under brackets, dash, and date in ISO format)\nAdd a new section on top of it named \"Unreleased\"\nAdd a new link in the bottom for version \"x.y.z\"\nChange the \"[unreleased]\" link to use the latest version - end of line, vx.y.z ... HEAD.\nCreate a commit \"Release vx.y.z\", push, create a PR, wait for it to pass, merge the PR.\nGo back to main screen and click on the latest commit (link: https://github.com/TulipaEnergy/TulipaClustering.jl/commit/main)\nAt the bottom, write @JuliaRegistrator register","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"After that, you only need to wait and verify:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Wait for the bot to comment (should take < 1m) with a link to a RP to the registry\nFollow the link and wait for a comment on the auto-merge\nThe comment should said all is well and auto-merge should occur shortly\nAfter the merge happens, TagBot will trigger and create a new GitHub tag. Check on https://github.com/TulipaEnergy/TulipaClustering.jl/releases\nAfter the release is create, a \"docs\" GitHub action will start for the tag.\nAfter it passes, a deploy action will run.\nAfter that runs, the stable docs should be updated. Check them and look for the version number.","category":"page"},{"location":"95-reference/#reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"95-reference/#Contents","page":"Reference","title":"Contents","text":"","category":"section"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Pages = [\"95-reference.md\"]","category":"page"},{"location":"95-reference/#Index","page":"Reference","title":"Index","text":"","category":"section"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Pages = [\"95-reference.md\"]","category":"page"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Modules = [TulipaClustering]","category":"page"},{"location":"95-reference/#TulipaClustering.AuxiliaryClusteringData","page":"Reference","title":"TulipaClustering.AuxiliaryClusteringData","text":"Structure to hold the time series used in clustering together with some summary statistics on the data.\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#TulipaClustering.ClusteringResult","page":"Reference","title":"TulipaClustering.ClusteringResult","text":"Structure to hold the clustering result.\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#TulipaClustering.append_period_from_source_df_as_rp!-Tuple{DataFrames.AbstractDataFrame}","page":"Reference","title":"TulipaClustering.append_period_from_source_df_as_rp!","text":"append_period_from_source_df_as_rp!(df; source_df, period, rp, key_columns)\n\nExtracts a period with index period from source_df and appends it as a representative period with index rp to df, using key_columns as keys.\n\nExamples\n\njulia> source_df = DataFrame([:period => [1, 1, 2, 2], :timestep => [1, 2, 1, 2], :a .=> \"b\", :value => 5:8])\n4×4 DataFrame\n Row │ period  timestep  a       value\n     │ Int64   Int64      String  Int64\n─────┼──────────────────────────────────\n   1 │      1          1  b           5\n   2 │      1          2  b           6\n   3 │      2          1  b           7\n   4 │      2          2  b           8\n\njulia> df = DataFrame([:rep_period => [1, 1, 2, 2], :timestep => [1, 2, 1, 2], :a .=> \"a\", :value => 1:4])\n4×4 DataFrame\n Row │ rep_period  timestep  a       value\n     │ Int64       Int64      String  Int64\n─────┼──────────────────────────────────────\n   1 │          1          1  a           1\n   2 │          1          2  a           2\n   3 │          2          1  a           3\n   4 │          2          2  a           4\n\njulia> TulipaClustering.append_period_from_source_df_as_rp!(df; source_df, period = 2, rp = 3, key_columns = [:timestep, :a])\n6×4 DataFrame\n Row │ rep_period  timestep  a       value\n     │ Int64       Int64      String  Int64\n─────┼──────────────────────────────────────\n   1 │          1          1  a           1\n   2 │          1          2  a           2\n   3 │          2          1  a           3\n   4 │          2          2  a           4\n   5 │          3          1  b           7\n   6 │          3          2  b           8\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaClustering.combine_periods!-Tuple{DataFrames.AbstractDataFrame}","page":"Reference","title":"TulipaClustering.combine_periods!","text":"combine_periods!(df)\n\nModifies a dataframe df by combining the columns timestep and period into a single column timestep of global time steps. The period duration is inferred automatically from the maximum time step value, assuming that periods start with time step 1.\n\nExamples\n\njulia> df = DataFrame([:period => [1, 1, 2], :timestep => [1, 2, 1], :value => 1:3])\n3×3 DataFrame\n Row │ period  timestep  value\n     │ Int64   Int64      Int64\n─────┼──────────────────────────\n   1 │      1          1      1\n   2 │      1          2      2\n   3 │      2          1      3\n\njulia> TulipaClustering.combine_periods!(df)\n3×2 DataFrame\n Row │ timestep  value\n     │ Int64      Int64\n─────┼──────────────────\n   1 │         1      1\n   2 │         2      2\n   3 │         3      3\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaClustering.df_to_matrix_and_keys-Tuple{DataFrames.AbstractDataFrame, Vector{Symbol}}","page":"Reference","title":"TulipaClustering.df_to_matrix_and_keys","text":"df_to_matrix_and_keys(df, key_columns)\n\nConverts a dataframe df (in a long format) to a matrix, ignoring the columns specified as key_columns. The key columns are converted from long to wide format and returned alongside the matrix.\n\nExamples\n\njulia> df = DataFrame([:period => [1, 1, 2, 2], :timestep => [1, 2, 1, 2], :a .=> \"a\", :value => 1:4])\n4×4 DataFrame\n Row │ period  timestep  a       value\n     │ Int64   Int64      String  Int64\n─────┼──────────────────────────────────\n   1 │      1          1  a           1\n   2 │      1          2  a           2\n   3 │      2          1  a           3\n   4 │      2          2  a           4\n\njulia> m, k = TulipaClustering.df_to_matrix_and_keys(df, [:timestep, :a]); m\n2×2 Matrix{Float64}:\n 1.0  3.0\n 2.0  4.0\n\njulia> k\n2×2 DataFrame\n Row │ timestep  a\n     │ Int64      String\n─────┼───────────────────\n   1 │         1  a\n   2 │         2  a\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaClustering.find_auxiliary_data-Tuple{DataFrames.AbstractDataFrame}","page":"Reference","title":"TulipaClustering.find_auxiliary_data","text":"find_auxiliary_data(clustering_data)\n\nCalculates auxiliary data associated with the clustering_data. These include:\n\nkey_columns_demand: key columns in the demand dataframe\nkey_columns_generation_availability: key columns in the generation availability dataframe\nperiod_duration: duration of time periods (in time steps)\nlast_period_duration: duration of the last period\nn_periods: total number of periods\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaClustering.find_period_weights-Tuple{Int64, Int64, Int64, Bool}","page":"Reference","title":"TulipaClustering.find_period_weights","text":"find_period_weights(period_duration, last_period_duration, n_periods, drop_incomplete_periods)\n\nFinds weights of two different types of periods in the clustering data:\n\ncomplete periods: these are all of the periods with length equal to period_duration.\nincomplete last period: if last period duration is less than period_duration, it is incomplete.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaClustering.find_representative_periods-Tuple{DataFrames.AbstractDataFrame, Int64}","page":"Reference","title":"TulipaClustering.find_representative_periods","text":"findrepresentativeperiods(     clusteringdata;     nrp = 10,     rescaledemanddata = true,     dropincompletelastperiod = false,     method = :kmeans,     distance = SqEuclidean(),     args...,   )\n\nFinds representative periods via data clustering.\n\nclustering_data: the data to perform clustering on.\nn_rp: number of representative periods to find.\nrescale_demand_data: if true, demands are first divided by the maximum demand value, so that they are between zero and one like the generation availability data\ndrop_incomplete_last_period: controls how the last period is treated if it is not complete: if this parameter is set to true, the incomplete period is dropped and the weights are rescaled accordingly; otherwise, clustering is done for n_rp - 1 periods, and the last period is added as a special shorter representative period\nmethod: clustering method to use, either :k_means and :k_medoids\ndistance: semimetric used to measure distance between data points.\nother named arguments can be provided; they are passed to the clustering method.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaClustering.fit_rep_period_weights!-Tuple{TulipaClustering.ClusteringResult}","page":"Reference","title":"TulipaClustering.fit_rep_period_weights!","text":"fitrepperiodweights!(weightmatrix, clusteringmatrix, rpmatrix; weight_type, tol, args...)\n\nGiven the initial weight guesses, finds better weights for convex or conical combinations of representative periods. For conical weights, it is possible to bound the total weight by one.\n\nThe arguments:\n\nclustering_result: the result of running TulipaClustering.find_representative_periods\nweight_type: the type of weights to find; possible values are:\n:convex: each period is represented as a convex sum of the representative periods (a sum with nonnegative weights adding into one)\n:conical: each period is represented as a conical sum of the representative periods (a sum with nonnegative weights)\n:conical_bounded: each period is represented as a conical sum of the representative periods (a sum with nonnegative weights) with the total weight bounded from above by one.\ntol: algorithm's tolerance; when the weights are adjusted by a value less then or equal to tol, they stop being fitted further.\nother arguments control the projected subgradient method; they are passed through to TulipaClustering.projected_subgradient_descent!.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaClustering.fit_rep_period_weights!-Tuple{Union{SparseArrays.SparseMatrixCSC{Float64, Int64}, Matrix{Float64}}, Matrix{Float64}, Matrix{Float64}}","page":"Reference","title":"TulipaClustering.fit_rep_period_weights!","text":"fitrepperiodweights!(weightmatrix, clusteringmatrix, rpmatrix; weight_type, tol, args...)\n\nGiven the initial weight guesses, finds better weights for convex or conical combinations of representative periods. For conical weights, it is possible to bound the total weight by one.\n\nThe arguments:\n\nweight_matrix: the initial guess for weights; the weights are adjusted using a projected subgradient descent method\nclustering_matrix: the matrix of raw clustering data\nrp_matrix: the matrix of raw representative period data\nweight_type: the type of weights to find; possible values are:\n:convex: each period is represented as a convex sum of the representative periods (a sum with nonnegative weights adding into one)\n:conical: each period is represented as a conical sum of the representative periods (a sum with nonnegative weights)\n:conical_bounded: each period is represented as a conical sum of the representative periods (a sum with nonnegative weights) with the total weight bounded from above by one.\ntol: algorithm's tolerance; when the weights are adjusted by a value less then or equal to tol, they stop being fitted further.\nshow_progress: if true, a progress bar will be displayed.\nother arguments control the projected subgradient method; they are passed through to TulipaClustering.projected_subgradient_descent!.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaClustering.matrix_and_keys_to_df-Tuple{Matrix{Float64}, DataFrames.AbstractDataFrame}","page":"Reference","title":"TulipaClustering.matrix_and_keys_to_df","text":"matrix_and_keys_to_df(matrix, keys)\n\nConverts a a matrix matrix to a dataframe, appending the key columns given by keys.\n\nExamples\n\njulia> m = [1.0 3.0; 2.0 4.0]\n2×2 Matrix{Float64}:\n 1.0  3.0\n 2.0  4.0\n\njulia> k = DataFrame([:timestep => 1:2, :a .=> \"a\"])\n2×2 DataFrame\n Row │ timestep  a\n     │ Int64      String\n─────┼───────────────────\n   1 │         1  a\n   2 │         2  a\n\njulia> TulipaClustering.matrix_and_keys_to_df(m, k)\n4×4 DataFrame\n Row │ rep_period  timestep  a       value\n     │ Int64       Int64      String  Float64\n─────┼────────────────────────────────────────\n   1 │          1          1  a           1.0\n   2 │          1          2  a           2.0\n   3 │          2          1  a           3.0\n   4 │          2          2  a           4.0\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaClustering.project_onto_nonnegative_orthant-Tuple{Vector{Float64}}","page":"Reference","title":"TulipaClustering.project_onto_nonnegative_orthant","text":"projectontononnegative_orthant(vector)\n\nProjects vector onto the nonnegative orthant. This projection is trivial: replace negative components of the vector with zeros.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaClustering.project_onto_simplex-Tuple{Vector{Float64}}","page":"Reference","title":"TulipaClustering.project_onto_simplex","text":"projectontosimplex(vector)\n\nProjects vector onto a unit simplex using Michelot's algorithm in Condat's accelerated implementation (2017). See Figure 2 of Condat, L. Fast projection onto the simplex and the  ball. Math. Program. 158, 575–585 (2016).. For the details on the meanings of v, ṽ, ρ and other variables, see the original paper.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaClustering.project_onto_standard_basis-Tuple{Vector{Float64}}","page":"Reference","title":"TulipaClustering.project_onto_standard_basis","text":"projectontostandard_basis(vector)\n\nProjects vector onto the standard basis. This projection is trivial: replace all components of the vector with zeros, except for the largest one, which is replaced with one.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaClustering.projected_subgradient_descent!-Tuple{Vector{Float64}}","page":"Reference","title":"TulipaClustering.projected_subgradient_descent!","text":"projectedsubgradientdescent!(x; gradient, projection, niters, rtol, learningrate, adaptivegrad)\n\nFits x using the projected gradient descent scheme.\n\nThe arguments:\n\nx: the value to fit\nsubgradient: the subgradient operator, that is, a function that takes vectors of the same shape as x as inputs and returns a subgradient of the loss at that point; the fitting is done to minimize the corresponding implicit loss\nprojection: the projection operator, that is, a function that, given a vector x, finds a point within some subspace that is closest to x\nniters: maximum number of projected gradient descent iterations\ntol: tolerance; when no components of x improve by more than tol, the algorithm stops\nlearning_rate: learning rate of the algorithm\nadaptive_grad: if true, the learning rate is adjusted using the adaptive gradient method, see John Duchi, Elad Hazan, and Yoram Singer. 2011. Adaptive Subgradient Methods for Online Learning and Stochastic   Optimization. J. Mach. Learn. Res. 12, null (2/1/2011), 2121–2159.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaClustering.split_into_periods!-Tuple{DataFrames.AbstractDataFrame}","page":"Reference","title":"TulipaClustering.split_into_periods!","text":"split_into_periods!(df; period_duration=nothing)\n\nModifies a dataframe df by separating the column timestep into periods of length period_duration. The new data is written into two columns:\n\nperiod: the period ID;\ntimestep: the time step within the current period.\n\nIf period_duration is nothing, then all of the time steps are within the same period with index 1.\n\nExamples\n\njulia> df = DataFrame([:timestep => 1:4, :value => 5:8])\n4×2 DataFrame\n Row │ timestep  value\n     │ Int64      Int64\n─────┼──────────────────\n   1 │         1      5\n   2 │         2      6\n   3 │         3      7\n   4 │         4      8\n\njulia> TulipaClustering.split_into_periods!(df; period_duration=2)\n4×3 DataFrame\n Row │ period  timestep  value\n     │ Int64   Int64      Int64\n─────┼──────────────────────────\n   1 │      1          1      5\n   2 │      1          2      6\n   3 │      2          1      7\n   4 │      2          2      8\n\njulia> df = DataFrame([:period => [1, 1, 2], :timestep => [1, 2, 1], :value => 1:3])\n3×3 DataFrame\n Row │ period  timestep  value\n     │ Int64   Int64      Int64\n─────┼──────────────────────────\n   1 │      1          1      1\n   2 │      1          2      2\n   3 │      2          1      3\n\njulia> TulipaClustering.split_into_periods!(df; period_duration=1)\n3×3 DataFrame\n Row │ period  timestep  value\n     │ Int64   Int64      Int64\n─────┼──────────────────────────\n   1 │      1          1      1\n   2 │      2          1      2\n   3 │      3          1      3\n\njulia> TulipaClustering.split_into_periods!(df)\n3×3 DataFrame\n Row │ period  timestep  value\n     │ Int64   Int64      Int64\n─────┼──────────────────────────\n   1 │      1          1      1\n   2 │      1          2      2\n   3 │      1          3      3\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaClustering.validate_df_and_find_key_columns-Tuple{DataFrames.AbstractDataFrame}","page":"Reference","title":"TulipaClustering.validate_df_and_find_key_columns","text":"validate_df_and_find_key_columns(df)\n\nChecks that dataframe df contains the necessary columns and returns a list of columns that act as keys (i.e., unique data identifiers within different periods).\n\nExamples\n\njulia> df = DataFrame([:period => [1, 1, 2], :timestep => [1, 2, 1], :a .=> \"a\", :value => 1:3])\n3×4 DataFrame\n Row │ period  timestep  a       value\n     │ Int64   Int64      String  Int64\n─────┼──────────────────────────────────\n   1 │      1          1  a           1\n   2 │      1          2  a           2\n   3 │      2          1  a           3\n\njulia> TulipaClustering.validate_df_and_find_key_columns(df)\n2-element Vector{Symbol}:\n :timestep\n :a\n\njulia> df = DataFrame([:value => 1])\n1×1 DataFrame\n Row │ value\n     │ Int64\n─────┼───────\n   1 │     1\n\njulia> TulipaClustering.validate_df_and_find_key_columns(df)\nERROR: DomainError with 1×1 DataFrame\n Row │ value\n     │ Int64\n─────┼───────\n   1 │     1:\nDataFrame must contain columns `timestep` and `value`\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaClustering.weight_matrix_to_df-Tuple{Union{SparseArrays.SparseMatrixCSC{Float64, Int64}, Matrix{Float64}}}","page":"Reference","title":"TulipaClustering.weight_matrix_to_df","text":"weight_matrix_to_df(weights)\n\nConverts a weight matrix from a (sparse) matrix, which is more convenient for internal computations, to a dataframe, which is better for saving into a file. Zero weights are dropped to avoid cluttering the dataframe.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaClustering.write_clustering_result_to_tables-Tuple{Any, TulipaClustering.ClusteringResult}","page":"Reference","title":"TulipaClustering.write_clustering_result_to_tables","text":"write_clustering_result_to_table(connection, clustering_result)\n\nWrites a TulipaClustering.ClusteringResult to CSV files in the output_folder.\n\n\n\n\n\n","category":"method"},{"location":"90-contributing/#contributing","page":"Contributing guidelines","title":"Contributing guidelines","text":"","category":"section"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"First of all, thanks for the interest!","category":"page"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"We welcome all kinds of contribution, including, but not limited to code, documentation, examples, configuration, issue creating, etc.","category":"page"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"Be polite and respectful, and follow the code of conduct.","category":"page"},{"location":"90-contributing/#Bug-reports-and-discussions","page":"Contributing guidelines","title":"Bug reports and discussions","text":"","category":"section"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"If you think you found a bug, feel free to open an issue. Focused suggestions and requests can also be opened as issues. Before opening a pull request, start an issue or a discussion on the topic, please.","category":"page"},{"location":"90-contributing/#Working-on-an-issue","page":"Contributing guidelines","title":"Working on an issue","text":"","category":"section"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"If you found an issue that interests you, comment on that issue what your plans are. If the solution to the issue is clear, you can immediately create a pull request (see below). Otherwise, say what your proposed solution is and wait for a discussion around it.","category":"page"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"tip: Tip\nFeel free to ping us after a few days if there are no responses.","category":"page"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"If your solution involves code (or something that requires running the package locally), check the developer documentation. Otherwise, you can use the GitHub interface directly to create your pull request.","category":"page"},{"location":"","page":"TulipaClustering","title":"TulipaClustering","text":"CurrentModule = TulipaClustering\nDocTestSetup = quote\n    using DataFrames\nend","category":"page"},{"location":"#TulipaClustering","page":"TulipaClustering","title":"TulipaClustering","text":"","category":"section"},{"location":"","page":"TulipaClustering","title":"TulipaClustering","text":"Documentation for TulipaClustering.","category":"page"},{"location":"#Contributors","page":"TulipaClustering","title":"Contributors","text":"","category":"section"},{"location":"","page":"TulipaClustering","title":"TulipaClustering","text":"<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/greg-neustroev\"><img src=\"https://avatars.githubusercontent.com/u/32451432?v=4?s=100\" width=\"100px;\" alt=\"Greg Neustroev\"/><br /><sub><b>Greg Neustroev</b></sub></a><br /><a href=\"#code-greg-neustroev\" title=\"Code\">💻</a> <a href=\"#doc-greg-neustroev\" title=\"Documentation\">📖</a> <a href=\"#maintenance-greg-neustroev\" title=\"Maintenance\">🚧</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/g-moralesespana\"><img src=\"https://avatars.githubusercontent.com/u/42405171?v=4?s=100\" width=\"100px;\" alt=\"Germán Morales\"/><br /><sub><b>Germán Morales</b></sub></a><br /><a href=\"#ideas-g-moralesespana\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://abelsiqueira.com\"><img src=\"https://avatars.githubusercontent.com/u/1068752?v=4?s=100\" width=\"100px;\" alt=\"Abel Soares Siqueira\"/><br /><sub><b>Abel Soares Siqueira</b></sub></a><br /><a href=\"#code-abelsiqueira\" title=\"Code\">💻</a> <a href=\"#review-abelsiqueira\" title=\"Reviewed Pull Requests\">👀</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/datejada\"><img src=\"https://avatars.githubusercontent.com/u/12887482?v=4?s=100\" width=\"100px;\" alt=\"Diego Alejandro Tejada Arango\"/><br /><sub><b>Diego Alejandro Tejada Arango</b></sub></a><br /><a href=\"#code-datejada\" title=\"Code\">💻</a> <a href=\"#doc-datejada\" title=\"Documentation\">📖</a> <a href=\"#review-datejada\" title=\"Reviewed Pull Requests\">👀</a> <a href=\"#maintenance-datejada\" title=\"Maintenance\">🚧</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/clizbe\"><img src=\"https://avatars.githubusercontent.com/u/11889283?v=4?s=100\" width=\"100px;\" alt=\"Lauren Clisby\"/><br /><sub><b>Lauren Clisby</b></sub></a><br /><a href=\"#projectManagement-clizbe\" title=\"Project Management\">📆</a> <a href=\"#ideas-clizbe\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->","category":"page"}]
}
